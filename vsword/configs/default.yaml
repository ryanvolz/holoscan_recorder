# SPDX-FileCopyrightText: Copyright (c) 2023 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
scheduler:
  worker_thread_number: 16
  stop_on_deadlock: true
  stop_on_deadlock_timeout: 500

pipeline:
  selector0: true
  converter0: true
  rotator0: true
  resampler0: true
  digital_rf0: true
  spectrogram0: true
  spectrogram_mqtt0: true
  spectrogram_output0: true
  metadata0: true
  selector1: true
  converter1: true
  rotator1: true
  resampler1: true
  digital_rf1: true
  spectrogram1: true
  spectrogram_mqtt1: true
  spectrogram_output1: true
  metadata1: true

packet_common: &common_packet_config
  interface_name: rx_port
  use_header_data_split: true
  gpu_direct: true
  batch_size: &batch_size 3125 # Number of packets to process at once into tensor data
  batch_capacity: 1 # Number of batches that can be queued and processed at once
  max_packet_size: &max_packet_size 4160
  num_subchannels: &num_subchannels 8 # Number of IQ subchannels of data that form a sample
  num_samples: &rx_chunk_size 400000 # Number of samples to output as a single chunk, must fit one batch of packets
  buffer_size: 4 # Number of num_samples chunks to store in the rx buffer
  freq_idx_scaling: 2000000
  freq_idx_offset: 3000000
  apply_conjugate: false
  spoof_header: false
  packet_skip_bytes: 64
  header_metadata:
    start_sample_idx: 0
    sample_rate_numerator: 2000000
    sample_rate_denominator: 1
    freq_idx: 0
    num_subchannels: *num_subchannels
    pkt_samples: 2048
    bits_per_int: 16
    is_complex: 1

advanced_network:
  cfg:
    version: 1
    manager: "dpdk"
    master_core: 0
    debug: false
    log_level: "info"

    memory_regions:
      - name: "Network_Headers_CPU"
        kind: "huge"
        affinity: 0
        access:
          - local
        # Should hold at least 3 * batch_size and have a minimum of 8192
        num_bufs: &num_bufs 9375
        # Size of the Ethernet header + IP header + UDP header
        buf_size: 42
      - name: "Ch0_Packets_GPU"
        kind: "device"
        affinity: 0
        access:
          - local
        num_bufs: *num_bufs
        buf_size: *max_packet_size
      - name: "Ch1_Packets_GPU"
        kind: "device"
        affinity: 0
        access:
          - local
        num_bufs: *num_bufs
        buf_size: *max_packet_size
    interfaces:
      - name: rx_port
        address: "0005:01:00.0"
        rx:
          flow_isolation: true
          queues:
            - name: "RF Samples Ch0"
              id: 0
              cpu_core: 6
              batch_size: *batch_size
              memory_regions:
                - "Network_Headers_CPU"
                - "Ch0_Packets_GPU"
            - name: "RF Samples Ch1"
              id: 1
              cpu_core: 7
              batch_size: *batch_size
              memory_regions:
                - "Network_Headers_CPU"
                - "Ch1_Packets_GPU"
          flows:
            - name: "UDP 60000 - Ch0"
              id: 0
              action:
                type: queue
                id: 0
              match:
                udp_src: 60000
                udp_dst: 60000
            - name: "UDP 60001 - Ch1"
              id: 1
              action:
                type: queue
                id: 1
              match:
                udp_src: 60000
                udp_dst: 60001

# EMVSIS processing

packet0:
  <<: *common_packet_config
  queue_id: 0

selector0:
  subchannel_idx: [0, 1, 2, 3, 4, 5]

rotator0:
  cycle_duration_secs: 10
  cycle_start_timestamp: 0
  schedule:
    - start: 0
      freq: 4.6e+6
    - start: 5
      freq: 4.65e+6

resampler0:
  up: 1
  down: 20
  outrate_cutoff: 1.0
  outrate_transition_width: 0.2
  attenuation_db: 98.35

drf_sink0:
  channel_dir: emvsis/vs

metadata0:
  receiver:
    description: "VSWORD recorder - EMVSIS"
  processing:
    decimation: 20
    interpolation: 1

spectrogram0:
  window: hann
  nperseg: 1000
  noverlap: null
  nfft: null
  detrend: false
  reduce_op: max
  num_spectra_per_chunk: 1

spectrogram_mqtt0:
  input_buffer_capacity: 10
  service_name: spectrogram_emvsis
  status_topic: "{service_name}/status"
  data_topic: "{service_name}/data"
  mqtt_host: "localhost"
  mqtt_port: 1883
  mqtt_keepalive: 60

spectrogram_output0:
  num_spectra_per_output: 600
  figsize:
    - 15
    - 6
  dpi: 300
  col_wrap: 1
  cmap: viridis
  snr_db_min: -5
  snr_db_max: 20
  plot_subdir: spectrograms/emvsis

  # Zephyr processing

packet1:
  <<: *common_packet_config
  queue_id: 1

selector1:
  subchannel_idx: [0, 1, 2, 3, 4, 5]

rotator1:
  cycle_duration_secs: 1
  cycle_start_timestamp: 0
  schedule:
    - start: 0
      freq: 31.65e+6

resampler1:
  up: 1
  down: 2
  outrate_cutoff: 1.0
  outrate_transition_width: 0.2
  attenuation_db: 98.35

drf_sink1:
  channel_dir: zephyr/vs

metadata1:
  receiver:
    description: "VSWORD recorder - Zephyr"
  processing:
    decimation: 2
    interpolation: 1

spectrogram1:
  window: hann
  nperseg: 1000
  noverlap: null
  nfft: null
  detrend: false
  reduce_op: max
  num_spectra_per_chunk: 1

spectrogram_mqtt1:
  input_buffer_capacity: 10
  service_name: spectrogram_zephyr
  status_topic: "{service_name}/status"
  data_topic: "{service_name}/data"
  mqtt_host: "localhost"
  mqtt_port: 1883
  mqtt_keepalive: 60

spectrogram_output1:
  num_spectra_per_output: 600
  figsize:
    - 15
    - 6
  dpi: 300
  col_wrap: 1
  cmap: viridis
  snr_db_min: -5
  snr_db_max: 20
  plot_subdir: spectrograms/zephyr
